#Haarcascade classifier(fast and less memory but does not take all objects) object detection ->modern deeplearning technique
#DEEPLEARNING->CONVULATION STEP ...It can predict FPs too
import cv2
import matplotlib.pyplot as plt


# In[2]:


# In[7]:


#Read Images

img=cv2.imread("people.png")
print(img.shape)

newImg=cv2.cvtColor(img,cv2.COLOR_BGR2RGB) #CONVERT BGR TO RGB


# In[3]:


#Show this image
plt.imshow(img)    #this will appear a little blue because of bgr format..so convert it into rgb


# In[4]:


plt.imshow(newImg)
plt.axis("off")  #say NO to nos along axis 
plt.show()


# In[5]:


model = cv2.CascadeClassifier("haarcascade_frontalface_alt.xml")


# In[6]:


faces = model.detectMultiScale(newImg,1.3,5)


# In[7]:


faces


# In[8]:


get_ipython().run_line_magic('pinfo', 'model.detectMultiScale')


# In[11]:


for f in faces:
    x,y,w,h = f
    cv2.rectangle(newImg,(x,y),(x+w,y+h),(0,255,0),2) # (RGB),thickness of line
    
    plt.imshow(newImg)
    plt.show()


